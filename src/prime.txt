result: [5, 11, 23, 47, 97, 197, 397, 797, 1597, 3203, 6421, 12853, 25717, 51437, 102877, 205759, 411527, 823117, 1646237, 3292489, 6584983, 13169977, 26339969, 52679969, 105359939, 210719881, 421439783, 842879579, 1685759167, 3371518343, 4_247_846_927]

func
const BITS32: usize = 4_247_846_927;
 let mut res: Vec<usize> = Vec::with_capacity(1000);
    let mut is_prime = vec![true; BITS32];
    let mut prev_prime = 2;
    let mut count = 0;
    for i in 2..BITS32 {
        if is_prime[i] {
            if i > prev_prime * 2 {
                res.push(i);
                prev_prime = i;
                count += 1;
                println!("{}", count);
                if count == 1000 {
                    break;
                }
            }
            let mut j = i * i;
            while j < BITS32 {
                is_prime[j] = false;
                j += i;
            }
        }
    }
    println!("{:?}", res);